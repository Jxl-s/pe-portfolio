name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}

      - name: Deploy site
        run: ssh my-vps '~/redeploy-site.sh'

      - name: Check site status
        run: |
          ssh my-vps '
            cd ${{ secrets.PROJECT_ROOT }}
            RESULT="$(docker compose ps --format "{{.State}} {{.Name}}")"

            # go through each line of the result
            while IFS= read -r line; do
              # extract the status and name
              STATUS=$(echo $line | awk "{print \$1}")
              NAME=$(echo $line | awk "{print \$2}")

              # exit if any service is not running
              if [ "$STATUS" != "running" ]; then
                echo "❌ Service $NAME is not running. Status: $STATUS"
                exit 1
              else
                echo "✅ Service $NAME is running."
              fi
            done <<< "$RESULT"
          '

      - name: Notify success
        if: success()
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=🚀 Deployment Successful"
      
      - name: Notify failure
        if: failure()
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=🚨 Deployment Failed"